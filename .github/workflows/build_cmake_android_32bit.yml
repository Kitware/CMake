name: Build CMake for Android (armeabi-v7a) - using nttld/setup-ndk + Debugging

on:
  # Ini memungkinkan Anda menjalankan workflow secara manual dari tab "Actions" di GitHub
  workflow_dispatch

jobs:
  build_android_armeabi_v7a:
    runs-on: ubuntu-latest # Menggunakan mesin virtual Ubuntu terbaru

    steps:
    - name: Checkout code
      # Mengunduh kode repositori (shantoze/CMake-arm) tempat workflow ini berada
      uses: actions/checkout@v4 # Menggunakan v4

    - name: Set up Java
      # NDK membutuhkan Java
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17' # Versi Java yang kompatibel dengan NDK

    - name: Set up Android NDK (using nttld/setup-ndk)
      # Menggunakan action komunitas nttld/setup-ndk@v1 untuk menginstal Android NDK
      uses: nttld/setup-ndk@v1
      with:
        # Gunakan parameter ndk-version sesuai action ini
        ndk-version: r26d # *** PENTING: Tentukan versi NDK yang konsisten di sini ***

    # --- LANGKAH DEBUGGING DIMULAI ---
    - name: Debug NDK Setup Paths
      run: |
        echo "--- NDK Environment Variables ---"
        echo "ANDROID_NDK_HOME = ${{ env.ANDROID_NDK_HOME }}"
        echo "ANDROID_HOME = ${{ env.ANDROID_HOME }}"
        echo "NDK_ROOT = ${{ env.NDK_ROOT }}"
        echo "--- Checking NDK Build Dir ---"
        # List isi direktori build di dalam NDK root yang disetel oleh Action
        ls -l ${{ env.ANDROID_NDK_HOME }}/build/ || echo "Directory ${{ env.ANDROID_NDK_HOME }}/build/ not found or listing failed"
        echo "--- Checking NDK CMake Dir ---"
        # List isi direktori cmake di dalam NDK build
        ls -l ${{ env.ANDROID_NDK_HOME }}/build/cmake/ || echo "Directory ${{ env.ANDROID_NDK_HOME }}/build/cmake/ not found or listing failed"
        echo "--- Checking for toolchain file existence ---"
        # Cek apakah file toolchain ada di lokasi yang diharapkan
        test -f ${{ env.ANDROID_NDK_HOME }}/build/cmake/android.toolchain.cmake && echo "Toolchain file EXISTS at expected path!" || echo "Toolchain file NOT found at expected path!"
        echo "Expected Toolchain Path: ${{ env.ANDROID_NDK_HOME }}/build/cmake/android.toolchain.cmake"
        echo "--- Debugging Complete ---"
    # --- LANGKAH DEBUGGING SELESAI ---


    - name: Install Additional Build Tools (Optional, tapi disarankan)
      # Langkah ini biasanya tidak perlu karena cmake/make sudah ada di runner Ubuntu,
      # tapi bisa ditambahkan jika runner standar berubah.
      run: |
        sudo apt-get update
        sudo apt-get install -y cmake make ninja-build git

    - name: Get CMake Source
      # Mengunduh kode sumber CMake LANGSUNG dari repositori asli Kitware
      # Disimpan di lokasi temporary runner ($RUNNER_TEMP/cmake_src)
      # Ini terpisah dari repositori shantoze/CMake-arm Anda
      run: git clone --depth 1 https://github.com/Kitware/CMake.git ${{ runner.temp }}/cmake_src

    - name: Create and Navigate to Build Directory
      # Membuat dan masuk ke direktori build di lokasi temporary
      run: |
        mkdir ${{ runner.temp }}/cmake_src/build
        cd ${{ runner.temp }}/cmake_src/build

    - name: Configure CMake Build for Android armeabi-v7a
      # Menjalankan konfigurasi CMake menggunakan NDK toolchain file
      # Path NDK diambil dari variabel lingkungan ANDROID_NDK_HOME yang disetel oleh nttld/setup-ndk@v1
      env:
        # nttld/setup-ndk@v1 seharusnya menyetel ANDROID_NDK_HOME
        INSTALL_DIR: ${{ runner.temp }}/cmake_install # Lokasi instalasi sementara di runner
      run: |
        cd ${{ runner.temp }}/cmake_src/build # Pastikan berada di direktori build
        # *** PENTING: Gunakan path toolchain file yang dikonfirmasi oleh langkah debugging ***
        # Berdasarkan dugaan, ini seharusnya ${{ env.ANDROID_NDK_HOME }}/build/cmake/android.toolchain.cmake
        cmake ${{ runner.temp }}/cmake_src \
          -DCMAKE_TOOLCHAIN_FILE=${{ env.ANDROID_NDK_HOME }}/build/cmake/android.toolchain.cmake \
          -DANDROID_ABI=armeabi-v7a \
          -DANDROID_PLATFORM=android-21 \
          -DCMAKE_BUILD_TYPE=Release \
          -DCMAKE_MAKE_PROGRAM=$(which make)

    - name: Build CMake
      # Menjalankan proses kompilasi menggunakan make
      run: |
        cd ${{ runner.temp }}/cmake_src/build # Pastikan berada di direktori build
        make -j$(nproc) # Menggunakan semua core runner

    - name: Install CMake
      # Menyalin hasil build ke direktori instalasi sementara ($INSTALL_DIR)
      run: |
        cd ${{ runner.temp }}/cmake_src/build # Pastikan berada di direktori build
        make install

    - name: Archive built CMake
      # Mengunggah isi direktori instalasi sebagai artefak build yang bisa diunduh
      uses: actions/upload-artifact@v4
      with:
        name: cmake-android-armeabi-v7a # Nama file ZIP hasil yang diunduh
        path: ${{ runner.temp }}/cmake_install # Path direktori di runner yang akan diunggah
        # retention-days: 5 # Opsional: berapa lama artefak disimpan di GitHub
