name: Build CMake for Android (armeabi-v7a) - Minimal Output

on:
  workflow_dispatch

jobs:
  build_android_armeabi_v7a:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Java
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'

    - name: Install Android SDK Command-line Tools
      run: |
        mkdir -p ${{ runner.temp }}/android-sdk
        export ANDROID_SDK_ROOT=${{ runner.temp }}/android-sdk

        SDK_TOOLS_URL="https://dl.google.com/android/repository/commandlinetools-linux-11076708_latest.zip"
        CMD_TOOLS_ZIP="cmdline-tools.zip"
        wget --quiet $SDK_TOOLS_URL -O $CMD_TOOLS_ZIP || exit 1
        
        # Unzip ke direktori sementara di dalam $ANDROID_SDK_ROOT untuk menghindari konflik nama
        # Zip ini biasanya mengekstrak ke folder 'cmdline-tools'
        unzip -q $CMD_TOOLS_ZIP -d $ANDROID_SDK_ROOT/cmdline-tools-temp-extraction || exit 1

        CMD_TOOLS_LATEST_DIR="$ANDROID_SDK_ROOT/cmdline-tools/latest"
        mkdir -p $CMD_TOOLS_LATEST_DIR
        
        # Pindahkan isi dari 'cmdline-tools-temp-extraction/cmdline-tools' ke 'latest'
        mv $ANDROID_SDK_ROOT/cmdline-tools-temp-extraction/cmdline-tools/* $CMD_TOOLS_LATEST_DIR/ || exit 1
        rm -rf $ANDROID_SDK_ROOT/cmdline-tools-temp-extraction # Hapus direktori sementara

        export PATH=$CMD_TOOLS_LATEST_DIR/bin:$PATH
        command -v sdkmanager || exit 1

        echo "PATH=$PATH" >> $GITHUB_ENV
        echo "ANDROID_SDK_ROOT=$ANDROID_SDK_ROOT" >> $GITHUB_ENV

        yes | sdkmanager --licenses --sdk_root=$ANDROID_SDK_ROOT > /dev/null || true
      shell: bash
      timeout-minutes: 7

    - name: Install Android NDK
      run: |
        command -v sdkmanager || exit 1

        NDK_VERSION_NUMBER="25.2.8702022"
        NDK_PACKAGE="ndk;$NDK_VERSION_NUMBER"
        
        yes | sdkmanager --install "$NDK_PACKAGE" --sdk_root=${{ env.ANDROID_SDK_ROOT }} > sdkmanager_ndk_install.log || \
          { cat sdkmanager_ndk_install.log; exit 1; }

        NDK_FULL_PATH=$(find ${{ env.ANDROID_SDK_ROOT }}/ndk/ -maxdepth 1 -type d -name "$NDK_VERSION_NUMBER" -print -quit)
        if [ -z "$NDK_FULL_PATH" ]; then
          ls -la ${{ env.ANDROID_SDK_ROOT }}/ndk/
          exit 1
        fi

        echo "ANDROID_NDK_HOME=$NDK_FULL_PATH" >> $GITHUB_ENV
      shell: bash
      timeout-minutes: 10

    - name: Validate NDK Setup and Toolchain Path
      run: |
        if [ -z "${{ env.ANDROID_NDK_HOME }}" ]; then exit 1; fi
        TOOLCHAIN_FILE_PATH="${{ env.ANDROID_NDK_HOME }}/build/cmake/android.toolchain.cmake"
        if [ ! -f "$TOOLCHAIN_FILE_PATH" ]; then exit 1; fi
      shell: bash

    - name: Install Host Build Tools
      run: |
        sudo apt-get update -qq
        sudo apt-get install -y cmake make ninja-build git
      shell: bash

    - name: Get CMake Source Code
      env:
        CMAKE_VERSION_TAG: "v3.29.3" # Tentukan versi CMake yang diinginkan
      run: |
        git clone --depth 1 --branch ${{ env.CMAKE_VERSION_TAG }} https://github.com/Kitware/CMake.git ${{ runner.temp }}/cmake_src
      shell: bash

    - name: Configure CMake Build for Android armeabi-v7a
      env:
        INSTALL_DIR: ${{ runner.temp }}/cmake_android_install
      run: |
        CMAKE_SOURCE_DIR=${{ runner.temp }}/cmake_src
        CMAKE_BUILD_DIR=${{ runner.temp }}/cmake_build_android

        mkdir -p $CMAKE_BUILD_DIR
        cd $CMAKE_BUILD_DIR

        cmake $CMAKE_SOURCE_DIR \
          -DCMAKE_TOOLCHAIN_FILE=${{ env.ANDROID_NDK_HOME }}/build/cmake/android.toolchain.cmake \
          -DANDROID_ABI=armeabi-v7a \
          -DANDROID_PLATFORM=android-21 \
          -DCMAKE_BUILD_TYPE=Release \
          -DCMAKE_INSTALL_PREFIX=${{ env.INSTALL_DIR }} \
          -DCMAKE_MAKE_PROGRAM=$(which make) \
          -DBUILD_TESTING=OFF # Opsional: nonaktifkan build test untuk mempercepat
          # Hindari penggunaan -DCMake_SOURCE_DIR, -DCMake_BINARY_DIR, -DCMake_DOC_DIR kecuali sangat dipahami
        if [ $? -ne 0 ]; then exit 1; fi
      shell: bash
      timeout-minutes: 7

    - name: Build CMake (Cross-compilation)
      run: |
        cd ${{ runner.temp }}/cmake_build_android
        make -j$(nproc) || exit 1
      shell: bash
      timeout-minutes: 20

    - name: Install CMake to Staging Directory
      run: |
        cd ${{ runner.temp }}/cmake_build_android
        make install || exit 1
      shell: bash
      timeout-minutes: 5

    - name: Archive built CMake for Android
      uses: actions/upload-artifact@v4
      with:
        name: cmake-android-armeabi-v7a-ndk${{ env.NDK_VERSION_NUMBER_FOR_ARTIFACT }}-cmake${{ env.CMAKE_VERSION_TAG_FOR_ARTIFACT }}
        path: ${{ runner.temp }}/cmake_android_install
        if-no-files-found: error
      env:
        NDK_VERSION_NUMBER_FOR_ARTIFACT: "25.2.8702022" # Harus konsisten
        CMAKE_VERSION_TAG_FOR_ARTIFACT: "v3.29.3"     # Harus konsisten
