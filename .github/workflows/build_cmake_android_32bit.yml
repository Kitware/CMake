name: Build CMake for Android (armeabi-v7a) - Validated

on:
  workflow_dispatch: # Allows manual triggering of the workflow

jobs:
  build_android:
    runs-on: ubuntu-latest # Specifies the runner environment

    env:
      # Define NDK version as an environment variable for easy updates
      # Using NDK r26d (LTS version) as it's stable and widely compatible.
      ANDROID_NDK_VERSION_PACKAGE: "ndk;26.3.11579264" # Corresponds to NDK r26d
      CMAKE_VERSION_TAG: "v3.29.3" # Version of CMake to build

    steps:
    - name: Checkout code
      uses: actions/checkout@v4 # Checks out your repository code

    - name: Set up Java
      uses: actions/setup-java@v4 # Sets up Java, required for Android SDK tools
      with:
        distribution: 'temurin' # Adoptium Temurin is a good choice
        java-version: '17'    # Android SDK tools often require Java 11 or 17

    - name: Setup Android SDK, NDK, CMake
      run: |
        set -e # Exit immediately if a command exits with a non-zero status.
        echo "Setting ANDROID_SDK_ROOT"
        export ANDROID_SDK_ROOT="${{ runner.temp }}/android-sdk"
        mkdir -p "$ANDROID_SDK_ROOT"
        echo "ANDROID_SDK_ROOT=$ANDROID_SDK_ROOT" >> $GITHUB_ENV

        echo "Downloading Android command line tools..."
        SDK_TOOLS_URL="https://dl.google.com/android/repository/commandlinetools-linux-11076708_latest.zip"
        wget -q -O cmdline-tools.zip "$SDK_TOOLS_URL"
        unzip -q cmdline-tools.zip -d "$ANDROID_SDK_ROOT/cmdline-tools-temp"
        mkdir -p "$ANDROID_SDK_ROOT/cmdline-tools/latest"
        mv "$ANDROID_SDK_ROOT/cmdline-tools-temp/cmdline-tools/"* "$ANDROID_SDK_ROOT/cmdline-tools/latest/"
        rm -rf "$ANDROID_SDK_ROOT/cmdline-tools-temp"
        rm -f cmdline-tools.zip

        echo "Adding SDK tools to PATH"
        echo "$ANDROID_SDK_ROOT/cmdline-tools/latest/bin" >> $GITHUB_PATH
        export PATH="$ANDROID_SDK_ROOT/cmdline-tools/latest/bin:$PATH"

        echo "Verifying sdkmanager..."
        which sdkmanager || { echo "sdkmanager not found on PATH after setup."; exit 1; }

        echo "Updating SDK..."
        yes | sdkmanager --sdk_root="$ANDROID_SDK_ROOT" --update > /dev/null

        echo "Installing NDK (${{ env.ANDROID_NDK_VERSION_PACKAGE }}), platforms, build-tools, SDK's CMake..."
        yes | sdkmanager --sdk_root="$ANDROID_SDK_ROOT" \
          "platforms;android-21" \
          "build-tools;33.0.0" \
          "${{ env.ANDROID_NDK_VERSION_PACKAGE }}" \
          "cmake;3.26.4"

        echo "Attempting to locate installed NDK..."
        NDK_BASE_PATH="$ANDROID_SDK_ROOT/ndk"

        if [ ! -d "$NDK_BASE_PATH" ] || [ -z "$(ls -A $NDK_BASE_PATH)" ]; then
          echo "Error: NDK base directory '$NDK_BASE_PATH' not found or is empty."
          # ... (error logging from previous version) ...
          exit 1
        fi

        INSTALLED_NDK_SUBDIR=$(ls "$NDK_BASE_PATH" | head -n 1)
        if [ -z "$INSTALLED_NDK_SUBDIR" ]; then
          echo "Error: No subdirectory found in NDK base path '$NDK_BASE_PATH'."
          # ... (error logging from previous version) ...
          exit 1
        fi

        DETECTED_NDK_HOME="$NDK_BASE_PATH/$INSTALLED_NDK_SUBDIR"
        echo "NDK appears to be installed in: $DETECTED_NDK_HOME"

        if [ ! -f "$DETECTED_NDK_HOME/build/cmake/android.toolchain.cmake" ]; then
            echo "Error: android.toolchain.cmake not found in $DETECTED_NDK_HOME/build/cmake/"
            # ... (error logging from previous version) ...
            exit 1
        fi
        
        echo "Successfully located NDK and toolchain file."
        echo "ANDROID_NDK_HOME=$DETECTED_NDK_HOME" >> $GITHUB_ENV

        # Extract NDK version number for artifact naming using shell parameter expansion
        # This removes the "ndk;" prefix from ANDROID_NDK_VERSION_PACKAGE
        NDK_VERSION_NUMBER_FOR_ARTIFACT="${ANDROID_NDK_VERSION_PACKAGE#ndk;}"
        echo "NDK_VERSION_NUMBER_FOR_ARTIFACT=$NDK_VERSION_NUMBER_FOR_ARTIFACT" >> $GITHUB_ENV
        echo "Extracted NDK version for artifact: $NDK_VERSION_NUMBER_FOR_ARTIFACT"

        echo "Accepting SDK licenses..."
        yes | sdkmanager --licenses --sdk_root="$ANDROID_SDK_ROOT" > /dev/null

        echo "Android SDK setup summary:"
        echo "SDK root: $ANDROID_SDK_ROOT"
        echo "NDK path (detected for next steps): $DETECTED_NDK_HOME"

    - name: Verifikasi SDK & NDK setup
      run: |
        echo "Verifying sdkmanager availability..."
        which sdkmanager || { echo "sdkmanager is not on PATH in this step."; exit 1; }
        echo "ANDROID_SDK_ROOT is: $ANDROID_SDK_ROOT"
        echo "ANDROID_NDK_HOME is: $ANDROID_NDK_HOME"
        echo "NDK_VERSION_NUMBER_FOR_ARTIFACT is: ${{ env.NDK_VERSION_NUMBER_FOR_ARTIFACT }}" # Verify it's available
        
        echo "Contents of SDK root ($ANDROID_SDK_ROOT):"
        ls -lA "$ANDROID_SDK_ROOT"
        
        echo "Contents of NDK root ($ANDROID_NDK_HOME):"
        if [ ! -d "$ANDROID_NDK_HOME" ]; then
          echo "Error: ANDROID_NDK_HOME directory '$ANDROID_NDK_HOME' does not exist."
          exit 1
        fi
        ls -lA "$ANDROID_NDK_HOME"
        
        echo "Checking for NDK toolchain file at $ANDROID_NDK_HOME/build/cmake/android.toolchain.cmake"
        if [ ! -f "$ANDROID_NDK_HOME/build/cmake/android.toolchain.cmake" ]; then
            echo "Error: NDK toolchain file NOT FOUND. Path: $ANDROID_NDK_HOME/build/cmake/android.toolchain.cmake"
            exit 1
        else
            echo "NDK toolchain file found successfully."
        fi

    - name: Install build tools (cmake, make, ninja for host)
      run: |
        sudo apt-get update -qq
        sudo apt-get install -y cmake make ninja-build git

    - name: Clone CMake source code
      run: |
        echo "Cloning CMake version ${{ env.CMAKE_VERSION_TAG }}"
        git clone --depth 1 --branch ${{ env.CMAKE_VERSION_TAG }} https://github.com/Kitware/CMake.git ${{ runner.temp }}/cmake_src

    - name: Konfigurasi build CMake untuk Android armeabi-v7a
      env:
        CMAKE_BUILD_DIR: ${{ runner.temp }}/cmake_build_android
        CMAKE_SOURCE_DIR: ${{ runner.temp }}/cmake_src
        INSTALL_DIR: ${{ runner.temp }}/cmake_android_install
      run: |
        echo "Configuring CMake build for Android (armeabi-v7a)..."
        mkdir -p "$CMAKE_BUILD_DIR"
        cd "$CMAKE_BUILD_DIR"

        export PATH="$ANDROID_SDK_ROOT/cmdline-tools/latest/bin:$PATH"
        which sdkmanager > /dev/null || echo "Warning: sdkmanager not found during CMake configuration."

        echo "Using NDK from: $ANDROID_NDK_HOME"
        echo "Toolchain file will be: $ANDROID_NDK_HOME/build/cmake/android.toolchain.cmake"

        cmake "$CMAKE_SOURCE_DIR" \
          -DCMAKE_TOOLCHAIN_FILE="$ANDROID_NDK_HOME/build/cmake/android.toolchain.cmake" \
          -DANDROID_ABI=armeabi-v7a \
          -DANDROID_PLATFORM=android-21 \
          -DCMAKE_BUILD_TYPE=Release \
          -DCMAKE_INSTALL_PREFIX="$INSTALL_DIR" \
          -DBUILD_TESTING=OFF \
          -Wno-dev

        if [ $? -ne 0 ]; then
          echo "CMake configuration failed!"
          echo "CMakeOutput.log content:"
          cat "$CMAKE_BUILD_DIR/CMakeFiles/CMakeOutput.log" || echo "CMakeOutput.log not found."
          echo "CMakeError.log content:"
          cat "$CMAKE_BUILD_DIR/CMakeFiles/CMakeError.log" || echo "CMakeError.log not found."
          exit 1
        fi
        echo "CMake configuration successful."

    - name: Build CMake with make
      env:
        CMAKE_BUILD_DIR: ${{ runner.temp }}/cmake_build_android
      run: |
        echo "Building CMake using make..."
        cd "$CMAKE_BUILD_DIR"
        make -j$(nproc)
        if [ $? -ne 0 ]; then
          echo "Make build failed!"
          exit 1
        fi
        echo "Make build successful."

    - name: Install hasil build CMake
      env:
        CMAKE_BUILD_DIR: ${{ runner.temp }}/cmake_build_android
        INSTALL_DIR: ${{ runner.temp }}/cmake_android_install
      run: |
        echo "Installing CMake to $INSTALL_DIR..."
        cd "$CMAKE_BUILD_DIR"
        make install
        if [ $? -ne 0 ]; then
          echo "Make install failed!"
          exit 1
        fi
        echo "CMake installation successful. Contents of $INSTALL_DIR:"
        ls -lA "$INSTALL_DIR"
        
        echo "Verifying key directories in installation:"
        ls -lA "$INSTALL_DIR/bin" || echo "Warning: $INSTALL_DIR/bin not found or empty."
        
        # Derive CMAKE_SHARE_DIR_NAME from CMAKE_VERSION_TAG for verification
        # Example: CMAKE_VERSION_TAG="v3.29.3" -> CMAKE_VERSION_NUMERIC_PART="3.29.3" -> CMAKE_SHARE_DIR_VERSION="3.29"
        # The directory created by CMake install is typically "cmake-X.Y"
        CMAKE_VERSION_NUMERIC_PART="${CMAKE_VERSION_TAG#v}" 
        CMAKE_SHARE_DIR_VERSION=$(echo "$CMAKE_VERSION_NUMERIC_PART" | cut -d. -f1,2)
        CMAKE_SHARE_DIR_TO_CHECK="cmake-$CMAKE_SHARE_DIR_VERSION"
        
        echo "Verifying share directory: $INSTALL_DIR/share/$CMAKE_SHARE_DIR_TO_CHECK"
        ls -lA "$INSTALL_DIR/share/$CMAKE_SHARE_DIR_TO_CHECK" || echo "Warning: $INSTALL_DIR/share/$CMAKE_SHARE_DIR_TO_CHECK not found or empty."

    - name: Upload artefak hasil build
      uses: actions/upload-artifact@v4
      with:
        # Use the new NDK_VERSION_NUMBER_FOR_ARTIFACT environment variable
        name: cmake-${{ env.CMAKE_VERSION_TAG }}-android-armeabi-v7a-ndk${{ env.NDK_VERSION_NUMBER_FOR_ARTIFACT }}
        path: ${{ runner.temp }}/cmake_android_install
        if-no-files-found: error
