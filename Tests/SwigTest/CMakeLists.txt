set(language "python")

cmake_minimum_required (VERSION 2.6)

project(example_${language}_class)

find_package(SWIG REQUIRED)
include(${SWIG_USE_FILE})

if(${language} MATCHES python)
  find_package(PythonLibs)
  include_directories(${PYTHON_INCLUDE_PATH})
  set(SWIG_LANG_LIBRARIES ${PYTHON_LIBRARIES})
endif(${language} MATCHES python)
if(${language} MATCHES perl)
  find_package(PerlLibs)
  include_directories(${PERL_INCLUDE_PATH})
  add_definitions(${PERL_EXTRA_C_FLAGS})
  set(SWIG_LANG_LIBRARIES ${PERL_LIBRARY})
endif(${language} MATCHES perl)
if(${language} MATCHES tcl)
  find_package(TCL)
  include_directories(${TCL_INCLUDE_PATH})
  set(SWIG_LANG_LIBRARIES ${TCL_LIBRARY})
endif(${language} MATCHES tcl)
if(${language} MATCHES ruby)
  find_package(Ruby)
  include_directories(${RUBY_INCLUDE_PATH})
  set(SWIG_LANG_LIBRARIES ${RUBY_LIBRARY})
endif(${language} MATCHES ruby)
if(${language} MATCHES php4)
  find_package(PHP4)
  include_directories(${PHP4_INCLUDE_PATH})
  set(SWIG_LANG_LIBRARIES ${PHP4_LIBRARY})
endif(${language} MATCHES php4)
if(${language} MATCHES pike)
  find_package(Pike)
  include_directories(${PIKE_INCLUDE_PATH})
  set(SWIG_LANG_LIBRARIES ${PIKE_LIBRARY})
endif(${language} MATCHES pike)

include_directories(${CMAKE_CURRENT_SOURCE_DIR})

set(CMAKE_SWIG_FLAGS "")

set_source_files_properties(example.i PROPERTIES CPLUSPLUS ON)
set_source_files_properties(example.i PROPERTIES SWIG_FLAGS "-includeall")
SWIG_ADD_MODULE(example "${language}"
  example.i example.cxx)
SWIG_LINK_LIBRARIES(example ${SWIG_LANG_LIBRARIES})
