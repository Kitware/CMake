
include ("${RunCMake_SOURCE_DIR}/check_errors.cmake")
unset (errors)

set (reference "/a//d")
cmake_path(RELATIVE_PATH reference BASE_DIRECTORY "/a/b/c")
set(output "$<PATH:RELATIVE_PATH,/a//d,/a/b/c>")
if (NOT output STREQUAL reference)
  list (APPEND errors "'${output}' instead of '${reference}'")
endif()

set (reference "/a//b///c")
cmake_path(RELATIVE_PATH reference BASE_DIRECTORY "/a/d")
set(output "$<PATH:RELATIVE_PATH,/a/b///c,/a/d>")
if (NOT output STREQUAL reference)
  list (APPEND errors "'${output}' instead of '${reference}'")
endif()

set (reference "a/b/c")
cmake_path(RELATIVE_PATH reference BASE_DIRECTORY "a")
set(output "$<PATH:RELATIVE_PATH,a/b/c,a>")
if (NOT output STREQUAL reference)
  list (APPEND errors "'${output}' instead of '${reference}'")
endif()

set (reference "a/b/c")
cmake_path(RELATIVE_PATH reference BASE_DIRECTORY "a/b/c/x/y")
set(output "$<PATH:RELATIVE_PATH,a/b/c,a/b/c/x/y>")
if (NOT output STREQUAL reference)
  list (APPEND errors "'${output}' instead of '${reference}'")
endif()

set (reference "a/b/c")
cmake_path(RELATIVE_PATH reference BASE_DIRECTORY "a/b/c")
set(output "$<PATH:RELATIVE_PATH,a/b/c,a/b/c>")
if (NOT output STREQUAL reference)
  list (APPEND errors "'${output}' instead of '${reference}'")
endif()

set (reference "a/b")
cmake_path(RELATIVE_PATH reference BASE_DIRECTORY "c/d")
set(output "$<PATH:RELATIVE_PATH,a/b,c/d>")
if (NOT output STREQUAL reference)
  list (APPEND errors "'${output}' instead of '${reference}'")
endif()

set (reference "/a/d")
cmake_path(RELATIVE_PATH reference BASE_DIRECTORY "e/d/c")
set(output "$<PATH:RELATIVE_PATH,/a/d,e/d/c>")
if (NOT output STREQUAL reference)
  list (APPEND errors "'${output}' instead of '${reference}'")
endif()

if (WIN32)
  set (reference "c:/a/d")
  cmake_path(RELATIVE_PATH reference BASE_DIRECTORY "e/d/c")
  set(output "$<PATH:RELATIVE_PATH,c:/a/d,e/d/c>")
  if (NOT output STREQUAL reference)
    list (APPEND errors "'${output}' instead of '${reference}'")
  endif()
endif()


check_errors("PATH:RELATIVE_PATH" ${errors})
