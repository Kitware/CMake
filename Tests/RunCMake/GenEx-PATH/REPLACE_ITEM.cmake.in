cmake_policy(SET CMP0140 NEW)

include ("${RunCMake_SOURCE_DIR}/check_errors.cmake")
unset (errors)

set (reference "a/b/c.e.f")
cmake_path (REPLACE_FILENAME reference "x.y")
set(output "$<PATH:REPLACE_FILENAME,a/b/c.e.f,x.y>")
if (NOT output STREQUAL reference)
  list (APPEND errors "FILENAME: '${output}' instead of '${reference}'")
endif()

set (reference "a/b/")
cmake_path (REPLACE_FILENAME reference "x.y")
set(output "$<PATH:REPLACE_FILENAME,a/b/,x.y>")
if (NOT output STREQUAL reference)
  list (APPEND errors "FILENAME: '${output}' instead of '${reference}'")
endif()

set (reference "a/b/c.e.f")
cmake_path (REPLACE_EXTENSION reference ".x")
set(output "$<PATH:REPLACE_EXTENSION,a/b/c.e.f,.x>")
if (NOT output STREQUAL reference)
  list (APPEND errors "EXTENSION: '${output}' instead of '${reference}'")
endif()
cmake_path (REPLACE_EXTENSION reference ".y")
set(output "$<PATH:REPLACE_EXTENSION,a/b/c.x,.y>")
if (NOT output STREQUAL reference)
  list (APPEND errors "EXTENSION: '${output}' instead of '${reference}'")
endif()
cmake_path (REPLACE_EXTENSION reference "")
set(output "$<PATH:REPLACE_EXTENSION,a/b/c.y,>")
if (NOT output STREQUAL reference)
  list (APPEND errors "EXTENSION: '${output}' instead of '${reference}'")
endif()

set (reference "a/b/c.e.f")
cmake_path (REPLACE_EXTENSION reference ".x" LAST_ONLY)
set(output "$<PATH:REPLACE_EXTENSION,LAST_ONLY,a/b/c.e.f,.x>")
if (NOT output STREQUAL reference)
  list (APPEND errors "EXTENSION: '${output}' instead of '${reference}'")
endif()
cmake_path (REPLACE_EXTENSION reference ".y" LAST_ONLY)
set(output "$<PATH:REPLACE_EXTENSION,LAST_ONLY,a/b/c.e.x,.y>")
if (NOT output STREQUAL reference)
  list (APPEND errors "EXTENSION: '${output}' instead of '${reference}'")
endif()
cmake_path (REPLACE_EXTENSION reference "" LAST_ONLY)
set(output "$<PATH:REPLACE_EXTENSION,LAST_ONLY,a/b/c.e.y,>")
if (NOT output STREQUAL reference)
  list (APPEND errors "EXTENSION: '${output}' instead of '${reference}'")
endif()

set (reference "/a/.b")
cmake_path (REPLACE_EXTENSION reference ".x")
set(output "$<PATH:REPLACE_EXTENSION,/a/.b,.x>")
if (NOT output STREQUAL reference)
  list (APPEND errors "EXTENSION: '${output}' instead of '/${reference}'")
endif()
cmake_path (REPLACE_EXTENSION reference ".x" LAST_ONLY)
set(output "$<PATH:REPLACE_EXTENSION,LAST_ONLY,/a/.b.x,.x>")
if (NOT output STREQUAL reference)
  list (APPEND errors "EXTENSION: '${output}' instead of '${reference}'")
endif()

set (reference "/a/b")
cmake_path (REPLACE_EXTENSION reference ".x")
set(output "$<PATH:REPLACE_EXTENSION,/a/b,.x>")
if (NOT output STREQUAL reference)
  list (APPEND errors "EXTENSION: '${output}' instead of '${reference}'")
endif()


######################################
## tests with list of paths
######################################
function (compute_reference action new_value)
  unset(reference)
  foreach (path IN LISTS paths)
    cmake_path(${action} path "${new_value}" ${ARGN})
    list(APPEND reference "${path}")
  endforeach()

  return(PROPAGATE reference)
endfunction()

set (paths "a/b/c.e.f" "g/h/i.j.k")
compute_reference(REPLACE_FILENAME "x.y")
set(output "$<PATH:REPLACE_FILENAME,a/b/c.e.f;g/h/i.j.k,x.y>")
if (NOT output STREQUAL reference)
  list (APPEND errors "FILENAME: '${output}' instead of '${reference}'")
endif()

set (paths "a/b/c.e.f" "g/h/i.j.k")
compute_reference(REPLACE_EXTENSION ".x")
set(output "$<PATH:REPLACE_EXTENSION,a/b/c.e.f;g/h/i.j.k,.x>")
if (NOT output STREQUAL reference)
  list (APPEND errors "EXTENSION: '${output}' instead of '${reference}'")
endif()

set (paths "a/b/c.e.f" "g/h/i.j.k")
compute_reference(REPLACE_EXTENSION ".x" LAST_ONLY)
set(output "$<PATH:REPLACE_EXTENSION,LAST_ONLY,a/b/c.e.f;g/h/i.j.k,.x>")
if (NOT output STREQUAL reference)
  list (APPEND errors "EXTENSION: '${output}' instead of '${reference}'")
endif()


check_errors("PATH:REPLACE..." ${errors})
